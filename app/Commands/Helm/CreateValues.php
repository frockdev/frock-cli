<?php

namespace App\Commands\Helm;

use App\Modules\ProjectConfig\Config;
use Illuminate\Console\Command;

class CreateValues extends Command
{
    /**
     * The signature of the command.
     *
     * @var string
     */
    protected $signature = 'helm:create-values {commaSeparatedEnvs}';

    /**
     * The description of the command.
     *
     * @var string
     */
    protected $description = 'Create values.yaml file for Helm chart';

    public function handle(Config $config)
    {
        $envs = explode(',', $this->argument('commaSeparatedEnvs'));
        @mkdir($config->getDeployConfig()->valuesByEnv, 0777, true);
        foreach ($envs as $env) {
            touch($config->getDeployConfig()->valuesByEnv . "/".$env.".values.yaml");
        }
        touch($config->getDeployConfig()->valuesByEnv . "/common.values.yaml");
        touch($config->getDeployConfig()->valuesByEnv . "/overrides.values.yaml");
        touch($config->getDeployConfig()->valuesByEnv . "/secrets.values.yaml");
        file_put_contents($config->getDeployConfig()->valuesByEnv . "/final.values.yaml", '# this file is autogenerated, do not edit it manually');
        $this->info('Created values.yaml files for ' . $this->argument('commaSeparatedEnvs') . ' environments');
        file_put_contents($config->getDeployConfig()->valuesByEnv . "/.gitignore", "secrets.values.yaml".PHP_EOL);
        file_put_contents($config->getDeployConfig()->valuesByEnv . "/.gitignore", "overrides.values.yaml".PHP_EOL, FILE_APPEND);
        file_put_contents($config->getDeployConfig()->valuesByEnv . "/.gitignore", "final.values.yaml".PHP_EOL, FILE_APPEND);
    }

}
